#cloud-config

hostname: kubermaster.${CLUSTER_NAME}
coreos:
  etcd2:
    name: ${BLACKSMITH_MASTER_ETCD_NAME}
    advertise-client-urls: http://${BLACKSMITH_MASTER_IP}:2379,http://${BLACKSMITH_MASTER_IP}:4001
    listen-client-urls: http://0.0.0.0:2379,http://0.0.0.0:4001
    initial-advertise-peer-urls: http://${BLACKSMITH_MASTER_IP}:2380
    listen-peer-urls: http://0.0.0.0:2380
    initial-cluster-token: ${BLACKSMITH_ETCD_CLUSTER_TOKEN}
    initial-cluster: ${BLACKSMITH_MASTER_ETCD_NAME}=http://${BLACKSMITH_MASTER_IP}:2380,${BLACKSMITH_SECOND_ETCD_NAME}=http://${BLACKSMITH_SECOND_IP}:2380,${BLACKSMITH_THIRD_ETCD_NAME}=http://${BLACKSMITH_THIRD_IP}:2380
    initial-cluster-state: new
    cors: '*'
  units:
    ## Configure your network
    - name: 00-${BLACKSMITH_MASTER_INTERNAL_INTERFACE_NAME}.network
      runtime: true
      content: |
        [Match]
        Name=${BLACKSMITH_MASTER_INTERNAL_INTERFACE_NAME}

        [Network]
        Address=${BLACKSMITH_MASTER_IP}/${INTERNAL_NETWORK_NETSIZE}
        Gateway=${INTERNAL_NETWORK_GATEWAY_IP}
        DNS=127.0.0.1
        DNS=${EXTERNAL_DNS}
    - name: 00-eno2.network
      runtime: true
      content: |
        [Match]
        Name=eno2

        [Network]
        Address=192.168.100.61
    - name: etcd2.service
      command: start
    - name: fleet.service
      command: start
    - name: flanneld.service
      command: start
      drop-ins:
      - name: 50-network-config.conf
        content: |
          [Service]
          ExecStartPre=/usr/bin/etcdctl set /coreos.com/network/config '{"Network":"10.1.0.0/16", "Backend": {"Type": "vxlan"}}'
    - name: docker.service
      command: start
      drop-ins:
        - name: 60-registry-mirror.conf
          content: |
            [Service]
            Environment='DOCKER_OPTS=--registry-mirror=http://france.cafebazaar.ir:5000 --insecure-registry=10.0.0.0/8 --insecure-registry=192.168.0.0/16'
        - name: 50-flanneld.conf
          content: |
            [Unit]
            After=flanneld.service
            Requires=flanneld.service
    - name: kube-kubelet.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Kubelet
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        [Service]
        # wait for kubernetes master to be up and ready
        ExecStart=${BLACKSMITH_KUBELET_DIR}/kubelet \
        --api-servers=http://${BLACKSMITH_MASTER_IP}:8080 \
        --kubeconfig=${BLACKSMITH_KUBECONFIG_DIR}/config\
        --config=${BLACKSMITH_MANIFESTS_DIR} \
        --healthz-bind-address=0.0.0.0 \
        --cluster-dns=10.100.0.10\
        --cluster-domain=cluster.local\
        --healthz-port=10248\
        --allow-privileged=true\
        --logtostderr=true
        Restart=always
        RestartSec=10
    - name: kube-proxy.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Proxy
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        [Service]
        ExecStart=${BLACKSMITH_KUBEPROXY_DIR}/kube-proxy \
        --kubeconfig=${BLACKSMITH_KUBECONFIG_DIR}/config\
        --master=http://${BLACKSMITH_MASTER_IP}:8080\
        --proxy-mode=iptables \
        --logtostderr=true
        Restart=always
        RestartSec=10

ssh_authorized_keys:
# Will be filled by build.sh
